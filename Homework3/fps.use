model FPS

abstract class FPSState
  operations
    seeOpponent(defeatable:Boolean)
      begin
      end
    lostOpponent()
      begin
      end
    receiveBlow(health:Integer)
      begin
      end
end

class neutral < FPSState
  operations
    seeOpponent(defeatable:Boolean)
    begin
      if (defeatable) then
        self.play.fpsState := self.play.attackState
      end;
      if (defeatable = false) then
        self.play.fpsState := self.play.panicState
      end;
    end

    lostOpponent()
      begin
      end
    receiveBlow(health:Integer)
      begin
      end
end

class attack < FPSState
  operations
  seeOpponent(defeatable:Boolean)
  begin
  end

  lostOpponent()
    begin
      self.play.fpsState := self.play.neutralState;
    end
  receiveBlow(health:Integer)
    begin
      if (health = 0) then
        self.play.fpsState := self.play.dieState
      end;
    end
end

class panic < FPSState
  operations
  seeOpponent(defeatable:Boolean)
  begin
  end

  lostOpponent()
    begin
      self.play.fpsState := self.play.neutralState;
    end
  receiveBlow(health:Integer)
    begin
      if (health >= 0) then
        self.play.fpsState := self.play.dieState;
      end;
    end
end

class die < FPSState
  operations
    seeOpponent(defeatable:Boolean)
      begin
      end

    lostOpponent()
      begin
      end
    receiveBlow(health:Integer)
      begin
      end
end

class Play
  attributes
    health : Integer init : 10
    fpsState : FPSState
    neutralState : FPSState
    attackState : FPSState
    panicState : FPSState
    dieState : FPSState

  operations
    initInstance()
    begin
      self.health := 10;
      self.neutralState := new neutral;
      self.attackState := new attack;
      self.panicState := new panic;
      self.dieState := new die;

      self.fpsState := self.neutralState; -- We are starting in neutral
    end

    seeOpponent(defeatable:Boolean)
      begin
        self.fpsState.seeOpponent(defeatable);
      end

    lostOpponent()
      begin
        self.fpsState.lostOpponent();
      end

    receiveBlow(health:Integer)
      begin
        self.fpsState.receiveBlow(health);
      end
end

-- associations
association fpsState between
 FPSState[1]
 Play[1]
end
